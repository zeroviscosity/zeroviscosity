extends ../../post

block content
  section.panel
    h3 TL;DR 
    p This post is part of a series that explores some key concepts in D3.js by building up an example, step by step, from a bare-bones pie chart to an interactive, animated donut chart that loads external data. For the enough-with-the-jibber-jabber-show-me-the-code types out there, here's a breakdown of the steps we'll be covering:
    ul
      li <a href="/d3-js-step-by-step/step-0-intro">Step 0: Intro</a>
      li <a href="/d3-js-step-by-step/step-1-a-basic-pie-chart">Step 1: A Basic Pie Chart</a> (<a href="https://github.com/zeroviscosity/d3-js-step-by-step/blob/master/step-1-a-basic-pie-chart.html" target="_blank">Code</a> | <a href="/static/d3-js-step-by-step/step-1-a-basic-pie-chart.html" target="_blank">Demo</a>)
      li.bold <a href="/d3-js-step-by-step/step-2-a-basic-donut-chart">Step 2: A Basic Donut Chart</a> (<a href="https://github.com/zeroviscosity/d3-js-step-by-step/blob/master/step-2-a-basic-donut-chart.html" target="_blank">Code</a> | <a href="/static/d3-js-step-by-step/step-2-a-basic-donut-chart.html" target="_blank">Demo</a>) &larr; You Are Here
      li <a href="/d3-js-step-by-step/step-3-adding-a-legend">Step 3: Adding a Legend</a> (<a href="https://github.com/zeroviscosity/d3-js-step-by-step/blob/master/step-3-adding-a-legend.html" target="_blank">Code</a> | <a href="/static/d3-js-step-by-step/step-3-adding-a-legend.html" target="_blank">Demo</a>)
      li <a href="/d3-js-step-by-step/step-4-loading-external-data">Step 4: Loading External Data</a> (<a href="https://github.com/zeroviscosity/d3-js-step-by-step/blob/master/step-4-loading-external-data.html" target="_blank">Code</a> | <a href="/static/d3-js-step-by-step/step-4-loading-external-data.html" target="_blank">Demo</a>)
      li <a href="/d3-js-step-by-step/step-5-adding-tooltips">Step 5: Adding Tooltips</a> (<a href="https://github.com/zeroviscosity/d3-js-step-by-step/blob/master/step-5-adding-tooltips.html" target="_blank">Code</a> | <a href="/static/d3-js-step-by-step/step-5-adding-tooltips.html" target="_blank">Demo</a>)
      li <a href="/d3-js-step-by-step/step-6-animating-interactivity">Step 6: Animating Interactivity</a> (<a href="https://github.com/zeroviscosity/d3-js-step-by-step/blob/master/step-6-animating-interactivity.html" target="_blank">Code</a> | <a href="/static/d3-js-step-by-step/step-6-animating-interactivity.html" target="_blank">Demo</a>)
    p <strong>NOTE:</strong> Because we're building things up step by step, the source code contains <code>NEW</code>, <code>UPDATED</code> and <code>REMOVED</code> comments to annotate the lines that have been added, altered or deleted relative to the previous step.

  section 
    p Food-wise, I prefer pie to donuts <span class="image-wrapper" data-width="318" data-height="232" data-s3-src="#{category.slug}/#{post.slug}/donuts.gif"></span>, but when it comes to data viz, donut charts have certain advantages. Primarily because the interior can be put to use (which we'll be doing in the <a href="/d3-js-step-by-step/step-3-adding-a-legend">next step</a>). But how can we make our pie into a donut?
    iframe.centered(src="/static/d3-js-step-by-step/step-2-a-basic-donut-chart.html", height="380", width="380", border="0", seamless)
    p I suppose we could create a white circle, make sure its z-index is over 9000, and then position it absolutely over top of the pie. That could work, but it's a terrible idea <span class="image-wrapper" data-width="300" data-height="216" data-s3-src="#{category.slug}/#{post.slug}/doing-it-wrong.gif"></span>. Instead we're going to make two small additions to the code. First we'll define how wide the donut should be:
    pre
      code.javascript.
        var donutWidth = 75;
    p Next we'll add one line to our definition of <code>arc</code>:
    pre
      code.javascript.
        var arc = d3.svg.arc()
          .innerRadius(radius - donutWidth)  // NEW
          .outerRadius(radius);
    p Ta da! Just like that we've transformed our pie chart into a donut chart. The <code>innerRadius</code> value defaults to 0, which results in a pie. In this case we've set it to be 75px less than the <code>outerRadius</code>, which results in a donut 75px wide.
    p Given that <a href="/d3-js-step-by-step/step-1-a-basic-pie-chart">Step 1</a> was a lot to take in, I thought it would be good to coast through this step on easy mode <span class="image-wrapper" data-width="350" data-height="198" data-s3-src="#{category.slug}/#{post.slug}/easy-mode.gif"></span>. Perhaps it was too simple to even be considered a step, but at any rate we can now march forward to <a href="/d3-js-step-by-step/step-3-adding-a-legend">Step 3</a> or take a peak at the updated code:
    div.lazy-code(data-src="/static/d3-js-step-by-step/step-2-a-basic-donut-chart.html", data-language="html")
      button.expand.small.secondary Display Full Code for Step 2

